// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // invert signal
    Not(in=reset, out=nreset);
    Not(in=load, out=nload);
    // amplifying signal
    Parallel16(in=nreset, out=nresetb);
    Parallel16(in=load, out=loadb);
    Parallel16(in=nload, out=nloadb);
    Parallel16(in=inc, out=incb);

    // signal combination
    Or(a=load, b=inc, out=w);
    Or(a=w, b=reset, out=ld);
    
    // increase signal
    Inc16(in=feedback, out=w1);
    And16(a=w1, b=incb, out=w2);
    // load signal
    And16(a=w2, b=nloadb, out=w3);
     // reset signal
    And16(a=in, b=loadb, out=w4);
    Or16(a=w3, b=w4, out=set);

    And16(a=set, b=nresetb, out=din);

    // 16 bit Register
    Register(in=din, load=ld, out=feedback);

    Not16(in=feedback, out=temp);
    Not16(in=temp, out=out);

}
