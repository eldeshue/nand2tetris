// Chip that decide jump or not
CHIP Branching {
  IN
    zr, ng,     // status of ALU's result
    j1, j2, j3;

  OUT
    result;

  PARTS:
  Not(in=zr, out=nzr);
  Not(in=ng, out=nng);
  And(a=nzr, b=nng, out=ps); // ALU's result is positive

  And(a=j1, b=ng, out=jlt);
  And(a=j2, b=zr, out=jeq);
  And(a=j3, b=ps, out=jgt);

  Or(a=jgt, b=jeq, out=jge);
  Or(a=jlt, b=jge, out=temp);

  And(a=j1, b=j2, out=temp1);
  And(a=temp1, b=j3, out=jmp);

  Or(a=jmp, b=temp, out=result);

}